# Your snippets
#
# Atom snippets allow you to enter a simple prefix in the editor and hit tab to
# expand the prefix into a larger code block with templated values.
#
# You can create a new snippet in this file by typing "snip" and then hitting
# tab.
#
# An example CoffeeScript snippet to expand log to console.log:
#
# '.source.coffee':
#   'Console log':
#     'prefix': 'log'
#     'body': 'console.log $1'
#
# Each scope (e.g. '.source.coffee' above) can only be declared once.
#
# This file uses CoffeeScript Object Notation (CSON).
# If you are unfamiliar with CSON, you can read more about it in the
# Atom Flight Manual:
# http://flight-manual.atom.io/using-atom/sections/basic-customization/#_cson
'.source.json':
  'jason (init)':
    'prefix':'jason'
    'body':"""
		{
			"$jason": {
				"head": {
					"title": "$1",
					"description": "$2",
					"icon": "$3.png",
					"offline": "true",
					"styles": {
						$4
					},
					"actions": {
						$5
					},
					"templates": {
						"body$6": {
							"sections": [
								{
									"items": {
										"{{#each $jason}}": {
											"type": "vertical",
											"components": [
												{
													"type": "$7",
													"text": "{{$8}}"
												},
											]
										}
									}
								}
							]
						}
					},
					"data": {
					}
				},
				"body": {
					"header": {
						...$9
						},
					"sections": [
						{ ...$10 },
						{ ...$11 },
						...$12
					],
					"layers": [
						{ ...$13 },
						{ ...$14 },
						...$15
					],
					"footer": {
						...$16
					}
				}
			}
		}
    """

  'format (font, size, color, padding, ...)':
    'prefix': 'format'
    'body': """
    "styled_row$1":
    {
      "font": "HelveticaNeue$2",
      "size": "20$3",
      "color": "#ff0000$4",
      "padding": "10$5",
      "width": "86$6",
      "height": "175$7",
      "bottom": "70$8",
      "left": "50%-43$9",
      "top": "100$10",
      "left": "10%$11",
      "align": "center$12",
      "background": "#6e2111$13",
      "corner_radius": "3$14"
    }

    "class": "styled_row$6"
    """

  'submit to network (action)':
    'prefix': 'netw'
    'body':"""
    "submit_item$1": {
      "type": "$network.request$2",
      "options": {
        "url": "https://jasonclient.org/submit$3",
        "method": "POST$4"
      },
      "success": {
        "type": "$render$5"
      }
    }

    "action": {
      "trigger": "submit_item$6"
    }
    """

  'load network (action at first time)':
    'prefix': 'load'
    'body':"""
    "$load": {
      "type": "$network.request",
      "options": {
      "url": "http://jasonclient.org/req.json$1"
      },
      "success": {
      "type": "$render"
    }
    """

  'show  (action when coming back (modal))':
    'prefix': 'show'
    'body':"""
    "$show": {
        "type": "$reload$1"
      }
    """

  'foreground  (when coming back from background state)':
    'prefix': 'foreground'
    'body':"""
    "$foreground": {
    "type": "$reload$1"
    }
    """

  'pull  (whenever user makes a pull to refresh action)':
    'prefix': 'pull'
    'body':"""
    "$pull": {
    "type": "$reload\$1"
    }
    """

  'require  (imports remote JSON files in parallel; not persistent)':
    'prefix': 'require'
    'body':"""
    "type": "$require",
    "options": {
    	"profiles": ["https://...", "https://...", "https://"],
    	"items": ["https://...", "https://...", "https://..."]
    },
    "success": {
    	"type": "$render",
    	"type": "$set",
    	"options": {
    		"profiles": "{{$jason.profiles}}"
    	}
    }
    """

  '$lambda  (Call another action by name)':
    'prefix': 'lambda'
    'body':"""
    "type": "$lambda",
    "options": {
      "name": "{{action_name$1}}",
      "options": {
        "url": "https://jasonbase.com/things/3nf.json$2"
      }
    },
    "success": {
      "type": "$render"
    },
    "error": {
      "type": "$util.banner",
      "options": {
        "title": "Error$3",
        "description": "Something went wrong$4"
      }
    }
    """

  'trigger  (Call another action by name (hardcoded))':
    'prefix': 'trigger'
    'body':"""
    "trigger": "refresh$1",
    "options": {
      "url": "https://jasonbase.com/things/3nf.json$2"
    },
    "success": {
      "type": "$render"
    },
    "error": {
      "type": "$util.banner",
      "options": {
        "title": "Error$3",
        "description": "Something went wrong$4"
      }
    }
    """

  '$render  (body OR body in $jason.head.templates OR specific template)':
    'prefix': 'render'
    'body':"""
    "head": {
    	"templates": {
            "body": {
    			....
    		},
            "empty_template": {
    			"sections": [{
    				"items": [{
    					"type": "label",
    					"text": "Empty view"
    				}]
    			}]
    		}
    		...
    	}
    }

	  "type": "$network.request",
	  "options": {
		"url": "https://jasonclient.com/req.json"
	  },
	  "success": {
		"type": "$render"
	  },
	  "error": {
		"type": "$render",
		"options": {
		  "template": "empty_template"
		}
	  }
    """

  '$snapshot  (takes a snapshot of visible screen)':
    'prefix': 'snapshot'
    'body':"""
	  "type": "$snapshot",
	  "success": {
		"type": "$util.share",
		"options": {
		  "items": [
			{
			  "type": "image",
			  "data": "{{$jason.data}}"
			}
		  ]
		}
	  }
    """

  '$href  (when component doesn\'t support href but supports an action)':
    'prefix': '$href'
    'body':"""
	   "type": "label",
	   "text": "trigger href",
	   "action": {
		 "type": "$href",
		 "options": {
		   "url": "...",
		   "transition": "...",
		   "view": "..."
		 }
	   }
    """

  'href  (get URL)':
    'prefix': 'href'
    'body':"""
      "type": "label",
      "text": "trigger href",
      "href": {
        "url": "...",
        "transition": "...",
        "view": "..."
      }
    """

  '$close  (Close a modal (works when the currently view is a modal))':
    'prefix': 'close'
    'body':"""
    """

  '$back  (Transition one step back from the current view)':
    'prefix': 'back'
    'body':"""
    """

  '$network.request HTML GET ()':
    'prefix': 'networkRequestHTMLGET'
    'body':"""
		"type": "$network.request",
		"options": {
			"url": "https://news.ycombinator.com/newest",
			"dataType": "html"
		},
		"success": {
			"type": "$render",
			"options": {
				"type": "html"
			}
		}
    """

  '$network.request JSON GET ()':
    'prefix': 'networkRequestJSONGET'
    'body':"""
		"type": "$network.request",
		"options": {
			"url": "http://plasticfm.herokuapp.com/things/3.json"
		},
		"success": {
			"type": "$render"
		}
    """

  '$network.request JSON POST (auth token)':
    'prefix': 'networkRequestPOST'
    'body':"""
	  "type": "$network.request",
	  "options": {
		"url": "http://www.jasonbase.com/messages.json",
		"method": "post",
		"data": {
		  "user_id": "fI9",
		  "message": "Hello there"
		},
		"header": {
		  "auth_token": "fnekfla98dls9sNFK0nf3"
		}
	  },
	  "success": {
		"type": "$render"
	  },
	  "error": {
		"type": "$util.alert",
		"options": {
		  "title": "Error",
		  "description": "Uh oh, something went wrong"
		}
	  }
    """

  '$network.request HTML POST (auto cookies)':
    'prefix': 'networkRequestHTMLPOST'
    'body':"""
	  "type": "$network.request",
	  "options": {
		"url": "https://news.ycombinator.com/login",
		"method": "post",
		"data": {
		  "acct": "{{$get.username}}",
		  "pw": "{{$get.password}}"
		},
		"data_type": "html"
	  },
	  "success": {
		"type": "$network.request",
		"options": {
		  "url": "https://news.ycombinator.com/saved?id={{$get.username}}",
		  "data_type": "html"
		},
		"success": {
		  "type": "$render",
		  "options": {
			"type": "html"
		  }
		}
	  }
    """

  '$network.upload (S3)':
    'prefix': 'networkUpload'
    'body':"""
	  "type": "$media.camera",
	  "options": {
		"quality": "0.4"
	  },
	  "success": {
		"type": "$network.upload",
		"options": {
		  "type": "s3",
		  "bucket": "fm.ethan.jason",
		  "data": "{{$jason.data}}",
		  "path": "",
		  "sign_url": "https://imagejason.herokuapp.com/sign_url"
		},
		"success": {
		  "type": "$network.request",
		  "options": {
			"url": "https://imagejason.herokuapp.com/post",
			"method": "post",
			"data": {
			  "bucket": "fm.ethan.jason",
			  "path": "/",
			  "filename": "{{$jason.filename}}"
			}
		  },
		  "success": {
			"type": "$reload"
		  }
		}
	  }
    """

  '$session.set (token auth)':
    'prefix': 'sessionSet'
    'body':"""
		"action": {
		  "type": "$network.request",
		  "options": {
			"url": "https://sessionjason.herokuapp.com/users/sign_in.json",
			"method": "post",
			"data": {
			  "user[email]": "{{$get.email}}",
			  "user[password]": "{{$get.password}}"
			}
		  },
		  "success": {
			"type": "$session.set",
			"options": {
			  "domain": "sessionjason.herokuapp.com",
			  "header": {
				"X-User-Email": "{{$jason.email}}",
				"X-User-Token": "{{$jason.authentication_token}}"
			  }
			},
			"success": {
			  "type": "$href",
			  "options": {
				"url": "https://sessionjason.herokuapp.com/posts.json",
				"transition": "replace"
			  }
			}
		  },
		  "error": {
			"type": "$util.banner",
			"options": {
			  "title": "Enter credentials",
			  "description": "Please enter both email and password"
			}
		  }
		}
    """

  '$session.reset (clear session /domain (json token OR html cookie))':
    'prefix': 'sessionReset'
    'body':"""
		"type": "$session.reset",
		"options": {
			"domain": "http://news.ycombinator.com",
			"type": "html"
		},
		"success": {
			"type": "$reload"
		}
    """

  '$set var':
    'prefix': 'set'
    'body':"""
	  "type": "label",
	  "text": "{{$get.firstname}} {{$get.lastname}}",
	  "action": {
		"type": "$set",
		"options": {
		  "firstname": "ethan",
		  "lastname": "gliechtenstein"
		},
		"success": {
		  "type": "$render"
		}
	  }
    """

  '$get var':
    'prefix': 'get'
    'body':"""
    "type": "$set",
    "options": {
      "bar": "{{$get.bar+'#'}}"
    },
    "success": {
      "type": "$render"
    }
    """

  '$cache.set (on disk, per view, per url)':
    'prefix': 'cacheSet'
    'body':"""
    "type": "$network.request",
    "options": {
      "url": "http://jasonclient.org/api/items.json"
    },
    "success": {
      "type": "$cache.set",
      "options": {
        "items": "{{$jason}}"
      },
      "success": {
        "type": "$util.alert",
        "options": {
          "title": "Items fetched",
          "description": "{{$cache.items.length}}"
        }
      }
    }
    """

  '$cache.reset':
    'prefix': 'cacheReset'
    'body':"""
    "type": "$cache.reset"
    """

  '$util.banner':
    'prefix': 'banner'
    'body':"""
    "_comment":"above screen, title + description",
    "type": "$util.banner",
    "options": {
        "title": "Hello World$1",
        "description": "I'm a banner. I display a title and a description$2",
        "type": "info"
    }
    """

  '$util.toast (above, one line)':
    'prefix': 'toast'
    'body':"""
    "type": "$util.toast",
    "options": {
        "text": "I'm a toast. I display a simple text.$1",
        "type": "warning$2"
    }
    """

  '$util.alert BASIC (modal, OK / CANCEL)':
    'prefix': 'alertBasic'
    'body':"""
    "type": "$util.alert",
    "options": {
      "title": "Basic Alert",
      "description": "I'm a basic alert. I simply display an alert that needs to be dismissed before moving forward"
    },
    "success": {
      "type": "$render"
    }
    """

  '$util.alert FORM (modal)':
    'prefix': 'alertForm'
    'body':"""
    "type": "$util.alert",
    "options": {
      "title": "Sign in",
      "description": "Please enter username and password",
      "form": [{
        "name": "username"
      }, {
        "type": "secure",
        "name": "password"
      }]
    },
    "success": {
      "type": "$network.request",
      "options": {
        "url": "https://www.jasonclient.org/users/sign_in.json",
        "method": "post",
        "data": {
          "username": "{{$jason.username}}",
          "password": "{{$jason.password}}"
        }
      }
    }
    """

  '$util.share (Text)':
    'prefix': 'shareText'
    'body':"""
    "type": "$util.share",
    "options": {
      "items": [{
        "type": "text",
        "text": "This is an automated message$1"
      }]
    }
    """

  '$util.share (image)':
    'prefix': 'shareImage'
    'body':"""
    "type": "$snapshot",
    "success": {
      "type": "$util.share",
      "options": {
        "items": [{
          "type": "image",
          "data": "{{$jason.data}}"
        }]
      }
    }
    """

  '$util.share (video)':
    'prefix': 'shareVideo'
    'body':"""
    "type": "$media.camera",
    "success": {
      "type": "$util.share",
      "options": {
        "items": [{
          "type": "video",
          "file_url": "{{$jason.file_url}}"
        }]
      }
    }
    """

  '$util.share (image from a URL, and a text)':
    'prefix': 'shareComb'
    'body':"""
    "type": "$util.share",
    "options": {
      "items": [{
        "type": "image",
        "url": "https://vjs.zencdn.net/v/oceans.png"
      },{
        "type": "text",
        "text": "This is a picture of ocean"
      }]
    }
    """

  '$util.picker, picker menu':
    'prefix': 'picker'
    'body':"""
		"header": {
			"menu": {
				"text": "Menu",
				"action": {
					"type": "$util.picker",
					"options": {
						"items": [{
							"text": "Trigger $util.banner",
							"action": {
								"type": "$util.banner",
								"options": {
									"title": "Success",
									"description": "This is a banner"
								}
							}
							},{
							"text": "Trigger $util.alert",
							"action": {
								"type": "$util.alert",
								"options": {
									"title": "Alert",
									"description": "This is an alert triggered by $util.picker"
								}
							}
							},{
							"text": "Trigger $audio.play",
							"action": {
								"type": "$audio.play",
								"options": {
									"url": "https://s3.amazonaws.com/www.textcast.co/icons/yo.mp3"
								}
							}
						}]
					}
				}
			}
		}
    """

  '$util.datepicker (unix timestamp)':
    'prefix': 'datepicker'
    'body':"""
		"type": "label",
		"text": "Pick a date",
		"action": {
			"type": "$util.datepicker",
			"options": {
				"title": "Pick a date",
				"description": "Just pick one"
			},
			"success": {
				"type": "$util.alert",
				"options": {
					"title": "Selected date",
					"description": "{{(new Date(parseInt(<span style='color:#ff0000;'>$jason</span>) * 1000)).toString()}}"
				}
			}
		}
    """

  '$util.addressbook (phone contacts, [{"name":"","phone"},{}])':
    'prefix': 'addressbook'
    'body':"""
		"title": "Addressbook demo",
		"actions": {
			"$load": {
				"type": "$util.addressbook",
				"success": {
					"type": "$render"
				}
			}
		},
		"templates": {
			"body": {
				"sections": [
					{
						"items": {
							"{{#each $jason}}": {
								"type": "vertical",
								"style": {
									"padding": "5",
									"spacing": "5"
								},
								"components": [
									{
										"type": "label",
										"text": "{{name}}"
									},
									{
										"type": "label",
										"text": "{{JSON.stringify(phone)}}"
									},
									{
										"type": "label",
										"text": "{{JSON.stringify(email)}}"
									}
								]
							}
						}
					}
				]
			}
		}
    """

  '$media.camera (capture, {"file_url":"","data_uri":"","data":"","content_type":"image/png"})':
    'prefix': 'camera'
    'body':"""
		"actions": {
			"$load": {
				"type": "$media.camera",
				"options": {
					"edit": "true",
					"type": "photo"
				},
				"success": {
					"type": "$render"
				}
			}
		},
		"templates": {
			"body": {
				"style": {
					"background": "{{$jason.data_url}}"
				}
			}
		}
    """

  '$media.picker (photos on phone)':
    'prefix': 'photos'
    'body':"""
		"type": "label",
		"text": "Select media",
		"action": {
			"type": "$media.picker",
			"options": {
				"edit": "true",
				"type": "video"
			},
			"success": {
				"type": "$util.alert",
				"options": {
					"title": "Selected {{$jason['content_type']}} at",
					"description": "{{$jason.file_url}}"
				}
			}
		}
    """

  '$media.play (video from URL)':
    'prefix': 'playVideoUrl'
    'body':"""
		"type": "image",
		"url": "https://vjs.zencdn.net/v/oceans.png",
		"action": {
			"type": "$media.play",
			"options": {
				"url": "https://vjs.zencdn.net/v/oceans.mp4"
			}
		}
    """

  '$audio.play (remote URL)':
    'prefix': 'playURL'
    'body':"""
		"type": "label",
		"text": "Yo",
		"action": {
			"type": "$audio.play",
			"options": {
				"title": "Busdriver - Worlds to Run",
				"author": "Song Exploder",
				"image": "http://discover.pocketcasts.com/discover/images/400/fff9ba50-53e1-0131-8293-723c91aeae46.jpg",
				"url": "http://www.podtrac.com/pts/redirect.mp3/traffic.libsyn.com/songexploder/SongExploder73-Busdriver.mp3"
			}
		}
    """

  '$audio.seek':
    'prefix': 'playSeek'
    'body':"""
		"type": "label",
		"text": "Go to 30% position",
		"style": {
			"bottom": "50",
			"left": "50%-50",
			"width": "100"
		},
		"action": {
			"type": "$audio.seek",
			"options": {
				"url": "http://www.podtrac.com/pts/redirect.mp3/traffic.libsyn.com/songexploder/SongExploder73-Busdriver.mp3",
				"position": "0.3"
			}
		}
    """

  '$audio.record (to upload, iOS + Android perm)':
    'prefix': 'recordAudio'
    'body':"""
		"type": "label",
		"text": "Record Now",
		"action": {
			"type": "$audio.record",
			"success": {
				"type": "$util.alert",
				"options": {
					"title": "Audio stored at",
					"description": "{{$jason.url}}"
				}
			}
		}
    """

  '$geo.get ({"coord": "12.342,22.343"}, Android Perm)':
    'prefix': 'geo'
    'body':"""
		"type": "$geo.get",
		"options": {
			"distance": "1000"
		},
		"success": {
			"type": "$href",
			"options": {
				"url": "http://maps.google.com/maps?q=&layer=c&cbll={{$jason.coord}}&cbp=11,0,0,0,0",
				"view": "App"
			}
		}
    """

  '$timer.start':
    'prefix': 'timer'
    'body':"""
		"type": "$timer.start",
		"options": {
			"interval": "1",
			"name": "timer1",
			"repeats": "true",
			"action": {
				"type": "$render"
			}
		}
    """

  '$timer.stop':
    'prefix': 'timerstop'
    'body':"""
		"type": "label",
		"text": "Stop the timer",
		"action": {
			"type": "$timer.stop",
			"options": {
				"name": "timer1"
			}
		}
    """

  '$convert.csv (CSV 2 JSON, first row as attributes names)':
    'prefix': 'csv'
    'body':"""
		"type": "$network.request",
		"options": {
			"url": "http://hastebin.com/raw/xiceheroku",
			"data_type": "raw"
		},
		"success": {
			"type": "$convert.csv",
			"options": {
				"data": "{{$jason}}"
			},
			"success": {
				"type": "$render"
			}
		}
    """

  '$convert.rss (RSS 2 JSON)':
    'prefix': 'rss'
    'body':"""
		"type": "$network.request",
		"options": {
			"url": "http://feeds.gawker.com/lifehacker/full",
			"data_type": "rss"
		},
		"success": {
			"type": "$convert.rss",
			"options": {
				"data": "{{$jason}}"
			},
			"success": {
				"type": "$render"
			}
		}
    """

  'Text Button':
    'prefix': 'button'
    'body':"""
	  "type": "button",
	  "text": "Tap Me!",
	  "style": {
		"width": "50",
		"height": "50",
		"background": "#00ff00",
		"color": "#ffffff",
		"font": "HelveticaNeue",
		"size": "12",
		"corner_radius": "25"
	  },
	  "action": {
		"trigger": "reload"
	  }
    """

  'Image Button':
    'prefix': 'buttonImage'
    'body':"""
    "type": "button",
    "url": "https://raw.githubusercontent.com/Jasonette/Jasonpedia/gh-pages/assets/krusty.png$1",
    "header": {"auth_token": "3nfdss3fNdlenghs_dnekgldnvq334hd"},
    "style": {
      "width": "50",
      "height": "50",
      "background": "#00ff00",
      "color": "#ffffff",
      "font": "HelveticaNeue",
      "size": "12",
      "corner_radius": "25"
    },
    "action": {"trigger": "reload$2"}
    """

  'textfield (input)':
    'prefix': 'input'
    'body':"""
	  "type": "textfield",
	  "name": "status",
	  "placeholder": "Status update",
	  "style": {
		"placeholder_color": "#cecece",
		"font": "HelveticaNeue",
		"align": "center",
		"width": "200",
		"height": "60",
		"autocorrect": "true",
		"autocapitalize": "true",
		"spellcheck": "true",
		"size": "12"
	  }
    """

  'password (input)':
    'prefix': 'password'
    'body':"""
	  "type": "textfield",
	  "name": "password",
	  "value": "dhenf93f!",
	  "placeholder": "Enter password",
	  "style": {
		"placeholder_color": "#cecece",
		"font": "HelveticaNeue",
		"align": "center",
		"width": "200",
		"height": "60",
		"secure": "true",
		"size": "12"
	  }
    """

  'textarea':
    'prefix': 'textarea'
    'body':"""
    		"type": "textarea",
		"name": "status",
		"placeholder": "Status update",
		"value": "Eating lunch..",
		"style": {
			"background": "rgba(0,0,0,0)",
			"placeholder_color": "#cecece",
			"font": "HelveticaNeue",
			"align": "center",
			"width": "100%",
			"height": "300",
			"autocorrect": "true",
			"autocapitalize": "true",
			"spellcheck": "true",
			"size": "12"
		}

		"submit": {
			"type": "$network.request",
			"options": {
				"url": "https://stts.jasonclient.org/status.json",
				"method": "post",
				"data": {
					"content": "{{$get.status}}"
				}
			},
			"success": {
				"type": "$reload"
			}
		}
    """

  'slider':
    'prefix': 'slider'
    'body':"""
		"type": "slider",
		"name": "gauge",
		"action": {
			"trigger": "notice"
		}

    "{{parseFloat($get.gauge)*100}}%"
    """

  'space (fixed size)':
    'prefix': 'space'
    'body':"""
		"type": "space",
		"style": {
			"height": "50"
		}
    """

  'map, needs Android perm + API key':
    'prefix': 'map'
    'body':"""
		"type": "map",
		"region": {
			"coord": "40.7197614,-73.9909211",
			"width": "100",
			"height": "100"
		},
		"pins": [{
			"title": "This is a pin",
			"description": "It really is.",
			"coord": "40.7197614,-73.9909211",
			"style": {
				"selected": "true"
			}
		}],
		"style": {
			"width": "100%",
			"height": "300"
		}
    """

  ' search (stored in local var)':
    'prefix': 'search'
    'body':"""
		"search": {
			"name": "query_text",
			"placeholder": "Search something",
			"style": {
				"background": "#000000"
			},
			"action": {
				"type": "$util.alert",
				"options": {
					"title": "You've entered:",
					"description": "{{$get.query_text}}"
				}
			}
		}
    """

  'menu':
    'prefix': 'menu'
    'body':"""
		"menu": {
			"text": "Tap me",
			"style": {
				"color": "#0000ff",
				"font": "HelveticaNeue-Bold",
				"size": "17"
			},
			"action": {
				"type": "$util.toast",
				"options": {
					"text": "Good job!"
				}
			},
			"badge": {
				"text": "3",
				"style": {
					"background": "#ff0000",
					"color": "#ffffff"
				}
			}
		}
    """

  'horizontal section':
    'prefix': 'horizontal'
    'body':"""
		"sections": [{
			"type": "horizontal",
			"items": [{
				"type": "label",
				"text": "Item 1"
				}, {
				"type": "label",
				"text": "Item 2"
				}, {
				"type": "label",
				"text": "Item 3"
				}, {
				"type": "label",
				"text": "Item 4"
				}, {
				"type": "label",
				"text": "Item 5"
			}]
		}],
    """

  'layer label':
    'prefix': 'layerLabel'
    'body':"""
		"layers": [
			{
				"type": "label",
				"text": "top:100, left:50%-25, width:50, padding:10",
				"style": {
					"top": "100",
					"left": "50%-25",
					"width": "50",
					"padding": "10"
				}
			}
		]
    """

  'layer image':
    'prefix': 'layerImage'
    'body':"""
		"layers": [
			{
				"type": "image",
				"url": "https://www.jasonclient.org/img/sticker.png",
				"style": {
					"width": "100",
					"corner_radius": "50",
					"bottom": "100",
					"right": "100"
				}
			}
		]
    """

  'web view':
    'prefix': 'webview'
    'body':"""
	  "type": "label",
	  "text": "Open a browser",
	  "href": {
		"url": "https://www.twitter.com/gliechtenstein",
		"view": "web"
	  }
    """

  'sms':
    'prefix': 'sms'
    'body':"""
	  "type": "label",
	  "text": "Email me",
	  "href": {
		"url": "sms:{{$get}}",
		"view": "app"
	  }
    """

  'mailto':
    'prefix': 'mailto'
    'body':"""
	  "type": "label",
	  "text": "Email me$1",
	  "href": {
		"url": "mailto:ethan.gliechtenstein@gmail.com?subject=It20works!$2",
		"view": "app"
	  }
    """

  'transition push':
    'prefix': 'transitionPush'
    'body':"""
    "type": "label$1",
    "text": "Push transition to another Jason View with tabs$2",
    "class": "bold$3",
    "href": {
      "url": "https://jasonette.github.io/Jasonpedia/core/href/tabs.json$4"
    }
    """

  'transition modal':
    'prefix': 'transitionModal'
    'body':"""
    "type": "label$1",
    "text": "Modal transition to another Jason View$2",
    "class": "bold$3",
    "href": {
      "url": "https://jasonette.github.io/Jasonpedia/core/href/index.json$4",
      "transition": "modal$5"
    }
    """

  'open Mail':
    'prefix': 'openMail'
    'body':"""
    "type": "label$1",
    "text": "Open external app (mail)$2",
    "class": "bold$3",
    "href": {
      "url": "mailto:ethan.gliechtenstein@gmail.com?subject=It%20works!$4",
      "view": "app"
    }
    """

  'open Browser':
    'prefix': 'openBrowser'
    'body':"""
    "type": "label$1",
    "text": "Open a browser$2",
    "class": "bold$3",
    "href": {
      "url": "https://twitter.com/intent/user?screen_name=gliechtenstein$4",
      "view": "web"
    }
    """

  'components':
    'prefix': 'components'
    'body':"""
		"components": [
			{
				"type": "image",
				"class": "carousel_img",
				"url": "https://jasonette.github.io/Jasonpedia/assets/homer.jpg"
			},
			{
				"type": "label",
				"text": "Homer Simpson",
				"class": "username center"
			},
			{
				"type": "button",
				"text": "Meow",
				"style": {
					"background": "rgb(100, 149, 237)",
					"color": "#ffffff",
					"align": "center",
					"width": "150",
					"height": "40"
				},
				"action": {
					"type": "$audio.play",
					"options": {
						"url": "https://s3-us-west-2.amazonaws.com/fm.ethan.jason/cat.mp3"
					}
				}
			}
		]
    """

  'header':
    'prefix': 'header'
    'body':"""
    "header": {
      "type": "horizontal",
      "style": {
        "align": "center",
        "background": "#ECA73E",
        "opacity": "0.2",
        "spacing": "10"
      },
      "components": [
        {
          "type": "image",
          "url": "https://s3-us-west-2.amazonaws.com/fm.ethan.jason/swipehorizontal.png",
          "style": {
            "width": "50"
          }
        },
        {
          "type": "label",
          "class": "bold",
          "text": "horizontally scrolling section"
        }
      ]
    },
    """
  'resizable layer':
    'prefix': 'layerResize'
    'body':"""
    "type": "$set",
      "options": {
        "style": "{{var new_style = $get.style; new_style['resize']='true'; return new_style;}}"
      },
      "success": {
        "type": "$util.banner",
        "options": {
          "title": "Now resizable",
          "description": "Try pinching Mario with two fingers"
        },
        "success": {
          "type": "$render"
        }
    }
    """

  'draggable layer':
    'prefix': 'layerDrag'
    'body':"""
    "type": "$set",
      "options": {
        "style": "{{var new_style = $get.style; new_style['move']='true'; return new_style;}}"
      },
      "success": {
        "type": "$util.banner",
        "options": {
          "title": "Now draggable",
          "description": "Try dragging Mario around"
        },
        "success": {
          "type": "$render"
        }
    }
    """

  'rotatable layer':
    'prefix': 'layerRotate'
    'body':"""
    "type": "$set",
      "options": {
        "style": "{{var new_style = $get.style; new_style['rotate']='true'; return new_style;}}"
      },
      "success": {
        "type": "$util.banner",
        "options": {
          "title": "Now rotatable",
          "description": "Try rotate Mario with two fingers"
        },
        "success": {
          "type": "$render"
        }
    }
    """
  'mixin':
    'prefix': '@'
    'body':"""
    "@": "posts[0].comments@https://jasonbase.com/things/n3f.json$1"
    """
